name: Tests

on:
  push:
    branches: [ main, lib-testing ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Ensure Rust toolchain
      run: |
        rustup update stable
        rustup default stable
        rustup component add rustfmt clippy
    
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Check formatting
      run: cargo fmt --all -- --check
    
    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
    
    - name: Run unit tests
      run: cargo test --lib
    
    - name: Build examples
      run: cargo build --examples --release

  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest

    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker image
      run: docker build -t distributed-topic-tracker .
    
    - name: Run end-to-end test
      run: ./test-e2e.sh

